Given a matrix of m x n elements (m rows, n columns), return all elements of the matrix in spiral order.

Example 1:

Input:
[
 [ 1, 2, 3 ],
 [ 4, 5, 6 ],
 [ 7, 8, 9 ]
]
Output: [1,2,3,6,9,8,7,4,5]
Example 2:

Input:
[
  [1, 2, 3, 4],
  [5, 6, 7, 8],
  [9,10,11,12]
]
Output: [1,2,3,4,8,12,11,10,9,5,6,7]

# 这道题目只需要模拟这个过程。分四步，第一步行左到右，第二步从上到下，第三步右到左，最后一步下到上。
class Solution:
    def spiralOrder(self, matrix):
        """
        :type matrix: List[List[int]]
        :rtype: List[int]
        """
        size = len(matrix)
        if size == 0: return []
        m = len(matrix[0])
        if m == 0: return []
        r,l = 0,0; size -= 1;m -= 1
        ans = []
        while r <= m and l <= size:
            for i in range(r,m + 1):
                ans.append(matrix[l][i])
            l += 1
            if l > size:
                break
            for i in range(l,size + 1):
                ans.append(matrix[i][m])
            m -= 1;i = m
            if m < r:
                break
            while i >= r:
                ans.append(matrix[size][i]);i -= 1
            size -= 1;i = size
            if size < l:
                break
            while i >= l:
                ans.append(matrix[i][r]); i -= 1
            r += 1
        return ans