Remove all elements from a linked list of integers that have value val.

Example:

Input:  1->2->6->3->4->5->6, val = 6
Output: 1->2->3->4->5

# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def removeElements(self, head, val):
        """
        :type head: ListNode
        :type val: int
        :rtype: ListNode
        """
        if not head:
            return None
        
        dummy,cur = head,head
        
        while cur and cur.val == val:
            cur = cur.next
            dummy = cur
        
        while cur:
            if cur.next and cur.next.val == val:
                cur.next = cur.next.next
                continue
            cur = cur.next
        return dummy

# 法二
        if not head:
            return None
        
        prev = head
        current = head.next

        while current:
            if current.val == val:
                current = current.next
            else:
                prev.next = current
                prev = current
                current = current.next
        # Handle if last element is to be removed
        prev.next = current

        # Handle the case when head is element to be removed
        if head.val == val:
            head = head.next
        return head